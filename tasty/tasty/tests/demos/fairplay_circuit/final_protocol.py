"\nThis TASTYL program evaluates a circuit generated with the FairplayMP compiler [http://fairplayproject.net/fairplayMP.html].\n\nAs example we use an addition circuit generated by FairplayMP:\n\n> cat Add.sfdl\nprogram Add{\n  type int = Int<4>;\n\n  type Alice = struct {int input, Int<5> output};\n  type Bob = struct {int input};\n\n  function void main (Alice alice, Bob bob){\n    alice.output = (alice.input + bob.input);\n  }\n}\n>\n\nThis program can be compiled into a circuit using the FairplayMP compiler (version 2.1):\nFairplayMP/compiler> java sfdl.Compiler Add.sfdl --optimize\n\nThe output circuit is written into 'Add.sfdl.shdl':\n> cat Add.sfdl.shdl\n// general info\n// gates: 18\n// wires: 26\ninput_player:alice:4:1\ninput:alice.input:4\ninput_player:bob:4:1\ninput:bob.input:4\n\nresult_player:alice:1\nresult:alice.output:5:8:11:16:21:25\n\ngate:0:8:0:4:6\ngate:1:9:1:5:6\ngate:2:10:0:4:1\ngate:3:11:9:10:6\ngate:4:12:2:6:6\ngate:5:13:1:5:1\ngate:6:14:9:10:1\ngate:7:15:13:14:7\ngate:8:16:12:15:6\ngate:9:17:3:7:6\ngate:10:18:2:6:1\ngate:11:19:12:15:1\ngate:12:20:18:19:7\ngate:13:21:17:20:6\ngate:14:22:3:7:1\ngate:15:23:17:20:1\ngate:16:24:22:23:7\ngate:17:25:17:24:6\n>\n\nThis circuit is securely evaluated by the following TASTYL program.\n"
driver = TestDriver()

def protocol(client, server):
    gc = GarbledCircuit(FairplayCircuit(protocol_path('Add.sfdl.shdl')), ['alice.input', 'bob.input'], ['alice.output'])
    client.x = Signed(bitlen=4).input(desc='a')
    server.y = Signed(bitlen=4).input(desc='b')
    client.gx = Garbled(val=client.x)
    server.gy = Garbled(val=server.y)
    client.gy <<= server.gy
    (client.gz,) = gc([client.gx, client.gy])
    client.z = Signed(val=client.gz)
    client.z.output(desc='zc')
